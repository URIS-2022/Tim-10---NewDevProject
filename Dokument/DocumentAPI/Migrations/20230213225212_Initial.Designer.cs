// <auto-generated />
using System;
using DocumentAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Document.Migrations
{
    [DbContext(typeof(DocumentContext))]
    [Migration("20230213225212_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DocumentAPI.Entities.DocumentEntity", b =>
                {
                    b.Property<Guid>("documentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateAdoptionDocument")
                        .HasColumnType("datetime2");

                    b.Property<string>("referenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("statusOfDocumentId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("typeOfDocumentId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("documentId");

                    b.HasIndex("statusOfDocumentId");

                    b.HasIndex("typeOfDocumentId");

                    b.ToTable("DocumentEntity");

                    b.HasData(
                        new
                        {
                            documentId = new Guid("1391ad03-80d4-4b47-a2fd-79802aa870aa"),
                            date = new DateTime(2021, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            dateAdoptionDocument = new DateTime(2021, 12, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            referenceNumber = "15548/RS7",
                            statusOfDocumentId = new Guid("f7097b00-a82f-4a74-9ea5-9b97d57ada4a"),
                            typeOfDocumentId = new Guid("0e6e43af-d3e6-463f-89a2-ec35a45413e7"),
                            userId = new Guid("6ccf941e-b3bb-41a0-bac4-b11b0f27b4c3")
                        },
                        new
                        {
                            documentId = new Guid("cfe84b37-bb6d-498d-a546-5dee8758ed1a"),
                            date = new DateTime(2019, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            dateAdoptionDocument = new DateTime(2019, 12, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            referenceNumber = "17748/RS7",
                            statusOfDocumentId = new Guid("2f73e247-1181-4be5-bb27-d644bdf97026"),
                            typeOfDocumentId = new Guid("94f2c14d-c3a4-4310-9b24-448afcaa2b81"),
                            userId = new Guid("6ccf941e-b3bb-41a0-bac4-b11b0f27b4c3")
                        });
                });

            modelBuilder.Entity("DocumentAPI.Entities.StatusOfDocumentEntity", b =>
                {
                    b.Property<Guid?>("statusOfDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("adopted")
                        .HasColumnType("bit");

                    b.Property<bool>("modified")
                        .HasColumnType("bit");

                    b.Property<bool>("opened")
                        .HasColumnType("bit");

                    b.Property<bool>("rejected")
                        .HasColumnType("bit");

                    b.HasKey("statusOfDocumentId");

                    b.ToTable("StatusOfDocumentEntity");

                    b.HasData(
                        new
                        {
                            statusOfDocumentId = new Guid("f7097b00-a82f-4a74-9ea5-9b97d57ada4a"),
                            adopted = true,
                            modified = false,
                            opened = false,
                            rejected = false
                        },
                        new
                        {
                            statusOfDocumentId = new Guid("2f73e247-1181-4be5-bb27-d644bdf97026"),
                            adopted = false,
                            modified = true,
                            opened = true,
                            rejected = false
                        });
                });

            modelBuilder.Entity("DocumentAPI.Entities.TypeOfDocumentEntity", b =>
                {
                    b.Property<Guid>("typeOfDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("typeOfDocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("typeOfDocumentId");

                    b.ToTable("TypeOfDocumentEntity");

                    b.HasData(
                        new
                        {
                            typeOfDocumentId = new Guid("0e6e43af-d3e6-463f-89a2-ec35a45413e7"),
                            typeOfDocumentName = "Rešenje o obrazovanju stručne komisije"
                        },
                        new
                        {
                            typeOfDocumentId = new Guid("94f2c14d-c3a4-4310-9b24-448afcaa2b81"),
                            typeOfDocumentName = "Predlog godišnjeg Programa zaštite"
                        },
                        new
                        {
                            typeOfDocumentId = new Guid("55f97234-d821-4f3a-89eb-2f8171b302b6"),
                            typeOfDocumentName = "Rešenje o obrazovanju Komisije za sprovođenje postupaka davanje poljoprivrednog zemljišta u zakup"
                        },
                        new
                        {
                            typeOfDocumentId = new Guid("d1c95cd9-5018-4b23-85bc-9af26063f80c"),
                            typeOfDocumentName = "Predlog odluke o davanju u zakup"
                        },
                        new
                        {
                            typeOfDocumentId = new Guid("efe8e9aa-caf5-4969-8941-d02c05031d07"),
                            typeOfDocumentName = "Saglasnost Ministarstva"
                        });
                });

            modelBuilder.Entity("DocumentAPI.Entities.DocumentEntity", b =>
                {
                    b.HasOne("DocumentAPI.Entities.StatusOfDocumentEntity", "StatusOfDocumentEntity")
                        .WithMany()
                        .HasForeignKey("statusOfDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentAPI.Entities.TypeOfDocumentEntity", "TypeOfDocumentEntity")
                        .WithMany()
                        .HasForeignKey("typeOfDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatusOfDocumentEntity");

                    b.Navigation("TypeOfDocumentEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
