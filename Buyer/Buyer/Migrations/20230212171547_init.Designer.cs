// <auto-generated />
using System;
using Buyer.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Buyer.Migrations
{
    [DbContext(typeof(BuyerContext))]
    [Migration("20230212171547_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Buyer.Entities.ContactPerson", b =>
                {
                    b.Property<Guid>("contactPersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("function")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("contactPersonId");

                    b.ToTable("contactPerson");

                    b.HasData(
                        new
                        {
                            contactPersonId = new Guid("e1ed563f-e902-4d84-92c9-ae1e066952a2"),
                            function = "function1",
                            name = "Amila",
                            phoneNumber = "03245345654",
                            surname = "Salihbegovic"
                        },
                        new
                        {
                            contactPersonId = new Guid("65979e67-38d1-4b1f-b636-2d8c09de25ea"),
                            function = "function2",
                            name = "Almir",
                            phoneNumber = "02434354224",
                            surname = "Salihbegovic"
                        });
                });

            modelBuilder.Entity("Buyer.Entities.Individual", b =>
                {
                    b.Property<Guid>("buyerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AuthorizedPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("accountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addressId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ban")
                        .HasColumnType("bit");

                    b.Property<DateTime>("banEndingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("banLasting")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("banStartingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("buyerType")
                        .HasColumnType("bit");

                    b.Property<string>("emailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("individualId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("individualName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("individualSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("priorityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("publicBiddingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("buyerId");

                    b.ToTable("individuals");

                    b.HasData(
                        new
                        {
                            buyerId = new Guid("f5a13586-1a5c-4fea-adbe-0f352ca13371"),
                            accountNumber = "2489de9e32",
                            addressId = "addresstesttt",
                            area = "15000",
                            ban = false,
                            banEndingDate = new DateTime(1900, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            banLasting = "0",
                            banStartingDate = new DateTime(1900, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            buyerType = true,
                            emailAddress = "123@gmail.com",
                            individualId = "280100798916",
                            individualName = "Amila",
                            individualSurname = "Salihbegovic",
                            paymentId = "111111111111",
                            phoneNumber1 = "2131231412",
                            phoneNumber2 = "8974839473",
                            priorityId = new Guid("12c7b642-416e-4358-90ca-9ddb67336f63"),
                            publicBiddingId = "bidding1"
                        });
                });

            modelBuilder.Entity("Buyer.Entities.LegalEntity", b =>
                {
                    b.Property<Guid>("buyerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AuthorizedPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("accountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addressId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ban")
                        .HasColumnType("bit");

                    b.Property<DateTime>("banEndingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("banLasting")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("banStartingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("buyerType")
                        .HasColumnType("bit");

                    b.Property<Guid>("contactPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("emailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("legalEntityFax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("legalEntityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("legalEntityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("priorityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("publicBiddingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("buyerId");

                    b.ToTable("legalEntities");

                    b.HasData(
                        new
                        {
                            buyerId = new Guid("2f108769-aaf3-4829-9263-72523bbb223e"),
                            accountNumber = "23534234563",
                            addressId = "addresstestno2",
                            area = "155000",
                            ban = true,
                            banEndingDate = new DateTime(2023, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            banLasting = "355",
                            banStartingDate = new DateTime(2022, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            buyerType = false,
                            contactPerson = new Guid("e1ed563f-e902-4d84-92c9-ae1e066952a2"),
                            emailAddress = "34455@gmail.com",
                            legalEntityFax = "fax",
                            legalEntityId = "12432434",
                            legalEntityName = "name",
                            paymentId = "vvvvvvvvvvvvvvv",
                            phoneNumber1 = "2345435675",
                            phoneNumber2 = "8974839473",
                            priorityId = new Guid("1bb9cb0a-a2ad-4ff3-bbaa-ba312e968a9b"),
                            publicBiddingId = "bidding2"
                        });
                });

            modelBuilder.Entity("Buyer.Entities.PriorityModel", b =>
                {
                    b.Property<Guid>("priorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("priorityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("priorityId");

                    b.ToTable("priorities");

                    b.HasData(
                        new
                        {
                            priorityId = new Guid("1bb9cb0a-a2ad-4ff3-bbaa-ba312e968a9b"),
                            priorityType = "Test priority number 1"
                        },
                        new
                        {
                            priorityId = new Guid("12c7b642-416e-4358-90ca-9ddb67336f63"),
                            priorityType = "Test priority type number 2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
