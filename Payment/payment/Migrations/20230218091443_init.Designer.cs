// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using payment.Entities;

#nullable disable

namespace payment.Migrations
{
    [DbContext(typeof(PaymentContext))]
    [Migration("20230218091443_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("payment.Entities.ExchangeRate", b =>
                {
                    b.Property<Guid>("exchangeRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<float>("value")
                        .HasColumnType("real");

                    b.HasKey("exchangeRateId");

                    b.ToTable("ExchangeRates");

                    b.HasData(
                        new
                        {
                            exchangeRateId = new Guid("d45da337-effc-4d60-8d22-79d27f248d7f"),
                            currency = "RSD",
                            date = new DateTime(2023, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            value = 1234f
                        },
                        new
                        {
                            exchangeRateId = new Guid("a7170f6a-33a1-431e-9b61-267aaf398297"),
                            currency = "RSD",
                            date = new DateTime(2023, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            value = 4321f
                        });
                });

            modelBuilder.Entity("payment.Entities.Payment", b =>
                {
                    b.Property<Guid>("paymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("accountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("amount")
                        .HasColumnType("real");

                    b.Property<Guid>("buyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("exchangeRateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("paymentPurpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("publicBiddingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("referenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("paymentId");

                    b.HasIndex("exchangeRateId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            paymentId = new Guid("2fb18b50-a4f2-4b06-a060-c8b84e4bc349"),
                            accountNumber = "236541",
                            amount = 4321f,
                            buyerId = new Guid("9aab5a84-057f-44a5-a382-8d066c36a342"),
                            date = new DateTime(2023, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            exchangeRateId = new Guid("d45da337-effc-4d60-8d22-79d27f248d7f"),
                            paymentPurpose = "Uplata javnog nadmetanja",
                            publicBiddingId = new Guid("dcc0aef3-2598-4b54-b3ef-853696f57488"),
                            referenceNumber = "147852"
                        },
                        new
                        {
                            paymentId = new Guid("2475979c-1afe-437a-acc1-42c749f9c900"),
                            accountNumber = "236541",
                            amount = 4321f,
                            buyerId = new Guid("367de211-7928-4bb6-8eea-81a1e77397fe"),
                            date = new DateTime(2022, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            exchangeRateId = new Guid("a7170f6a-33a1-431e-9b61-267aaf398297"),
                            paymentPurpose = "Uplata javnog nadmetanja",
                            publicBiddingId = new Guid("dcc0aef3-2598-4b54-b3ef-853696f57488"),
                            referenceNumber = "147852"
                        });
                });

            modelBuilder.Entity("payment.Entities.Payment", b =>
                {
                    b.HasOne("payment.Entities.ExchangeRate", "ExchangeRate")
                        .WithMany()
                        .HasForeignKey("exchangeRateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExchangeRate");
                });
#pragma warning restore 612, 618
        }
    }
}
