// <auto-generated />
using System;
using Contract.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Contract.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230214010951_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Contract.Entities.ContractEntity", b =>
                {
                    b.Property<Guid>("contractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("buyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("dateOfContract")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateOfSigning")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("deadline")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("documentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("publicBiddingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("referenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("typeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("contractId");

                    b.HasIndex("typeId");

                    b.ToTable("ContractEntity");

                    b.HasData(
                        new
                        {
                            contractId = new Guid("42889dfc-4e97-49b0-827e-80066dcf48a4"),
                            buyerId = new Guid("d14ee77f-b24c-4f06-9c6f-016552927e94"),
                            dateOfContract = new DateTime(2022, 12, 12, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            dateOfSigning = new DateTime(2022, 12, 12, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            deadline = new DateTime(2024, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            documentId = new Guid("e8522d7b-5261-4588-907f-4dbba12d6aed"),
                            place = "Subotica",
                            publicBiddingId = new Guid("192cb74b-d8d9-4430-82a3-f585a7e89689"),
                            referenceNumber = "123/RS",
                            typeId = new Guid("06cfbbbf-39e1-485c-bd54-3cb336f25242")
                        },
                        new
                        {
                            contractId = new Guid("edf365dc-83f7-4402-b1c4-ecd794952fd4"),
                            buyerId = new Guid("bbde3af2-1804-43ae-9d83-ac631a72d6f5"),
                            dateOfContract = new DateTime(2020, 9, 17, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            dateOfSigning = new DateTime(2020, 9, 17, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            deadline = new DateTime(2023, 12, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            documentId = new Guid("d450be56-6ca0-4624-8673-21d9b57517af"),
                            place = "Novi Sad",
                            publicBiddingId = new Guid("9128178c-b6bc-4c61-a58e-4d994ee9a4f5"),
                            referenceNumber = "123/RS",
                            typeId = new Guid("5e6f0201-b31a-4767-8087-910e3c91dcc4")
                        });
                });

            modelBuilder.Entity("Contract.Entities.TypeOfGuaranteeEntity", b =>
                {
                    b.Property<Guid>("typeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("typeId");

                    b.ToTable("TypeOfGuaranteeEntity");

                    b.HasData(
                        new
                        {
                            typeId = new Guid("06cfbbbf-39e1-485c-bd54-3cb336f25242"),
                            type = "Monthly"
                        },
                        new
                        {
                            typeId = new Guid("5e6f0201-b31a-4767-8087-910e3c91dcc4"),
                            type = "Quarterly"
                        });
                });

            modelBuilder.Entity("Contract.Entities.ContractEntity", b =>
                {
                    b.HasOne("Contract.Entities.TypeOfGuaranteeEntity", "TypeOfGuaranteeEntity")
                        .WithMany()
                        .HasForeignKey("typeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfGuaranteeEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
